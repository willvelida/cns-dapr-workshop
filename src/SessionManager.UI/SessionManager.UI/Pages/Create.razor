@page "/sessions/create"
@using SessionManager.UI.Models;
@using SessionManager.UI.Services;
@inject ISessionManagerService ISessionManagerService
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-lg-9">
        <h1>Create new session</h1>
    </div>
    <div class="col-lg-3 text-right">
        <a class="btn btn-secondary btn-sm" href="sessions" role="button">Back to Sessions</a>
    </div>
</div>

@if (createSessionDto != null)
{
    <EditForm Model="@createSessionDto" OnValidSubmit="@SubmitSession">
        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="createSessionDto.Name" />
        </div>
        <div class="form-group">
            <label>Description</label>
            <InputText class="form-control" @bind-Value="createSessionDto.Description" />
        </div>
        <div class="form-group">
            <label>Date</label>
            <InputDate class="form-control" @bind-Value="createSessionDto.Date" />
        </div>
        <div class="form-group">
            <label>Location</label>
            <InputText class="form-control" @bind-Value="createSessionDto.Location" />
        </div>
        <div class="form-group">
            <label>Speaker</label>
            <InputText class="form-control" @bind-Value="createSessionDto.Speaker" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <InputText class="form-control" @bind-Value="createSessionDto.SpeakerEmail" />
        </div>
        <button type="submit" class="btn btn-primary">Create</button>
    </EditForm>
}
else
{
    <p>Loading...</p>
}

@code {
    public CreateSessionDto createSessionDto { get; set; }

    protected override void OnInitialized()
    {
        createSessionDto = new CreateSessionDto();
    }

    private async void SubmitSession()
    {
        await ISessionManagerService.CreateNewSession(createSessionDto);

        NavigationManager.NavigateTo("/sessions");
    }
}
